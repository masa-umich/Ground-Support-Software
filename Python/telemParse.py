### BEGIN AUTOGENERATED SECTION - MODIFICATIONS TO THIS CODE WILL BE OVERWRITTEN

### telemParse.py
### Autogenerated by telem_file_generator.py on Sun Jan  3 03:05:31 2021

import time
import struct

class TelemParse:

	def __init__(self):
		self.csv_header = "Time (s),valve_states (ul),pressure[0] (psi),pressure[1] (psi),pressure[2] (psi),pressure[3] (psi),pressure[4] (psi),pressure[5] (psi),e_batt (Volts),i_batt (Amps),STATE (ul),vlv0.i (Amps),vlv1.i (Amps),vlv2.i (Amps),vlv3.i (Amps),vlv4.i (Amps),vlv5.i (Amps),vlv6.i (Amps),vlv7.i (Amps),vlv8.i (Amps),vlv0.e (Volts),vlv1.e (Volts),vlv2.e (Volts),vlv3.e (Volts),vlv4.e (Volts),vlv5.e (Volts),vlv6.e (Volts),vlv7.e (Volts),vlv8.e (Volts),e3v (Volts),e5v (Volts),i5v (Amps),i3v (Amps),last_command_id (ul),i_mtr_ab[0] (Amps),i_mtr_ab[1] (Amps),i_mtr_ab[2] (Amps),i_mtr_ab[3] (Amps),i_mtr[0] (Amps),i_mtr[1] (Amps),epot[0] (Volts),epot[1] (Volts),epot[2] (Volts),epot[3] (Volts),micros (us),telem_rate (ms),adc_rate (ms),own_board_addr (ul),\n"
		self.log_string = ""
		self.num_items = 53
		
		self.dict = {}
		self.units = {}
		
		self.items = [''] * self.num_items
		self.items[0] = 'packet_type'
		self.items[1] = 'target_addr'
		self.items[2] = 'priority'
		self.items[3] = 'do_cobbs'
		self.items[4] = 'checksum'
		self.items[5] = 'timestamp'
		self.items[6] = 'valve_states' 
		self.items[7] = 'pressure[0]' 
		self.items[8] = 'pressure[1]' 
		self.items[9] = 'pressure[2]' 
		self.items[10] = 'pressure[3]' 
		self.items[11] = 'pressure[4]' 
		self.items[12] = 'pressure[5]' 
		self.items[13] = 'e_batt' 
		self.items[14] = 'i_batt' 
		self.items[15] = 'STATE' 
		self.items[16] = 'vlv0.i' 
		self.items[17] = 'vlv1.i' 
		self.items[18] = 'vlv2.i' 
		self.items[19] = 'vlv3.i' 
		self.items[20] = 'vlv4.i' 
		self.items[21] = 'vlv5.i' 
		self.items[22] = 'vlv6.i' 
		self.items[23] = 'vlv7.i' 
		self.items[24] = 'vlv8.i' 
		self.items[25] = 'vlv0.e' 
		self.items[26] = 'vlv1.e' 
		self.items[27] = 'vlv2.e' 
		self.items[28] = 'vlv3.e' 
		self.items[29] = 'vlv4.e' 
		self.items[30] = 'vlv5.e' 
		self.items[31] = 'vlv6.e' 
		self.items[32] = 'vlv7.e' 
		self.items[33] = 'vlv8.e' 
		self.items[34] = 'e3v' 
		self.items[35] = 'e5v' 
		self.items[36] = 'i5v' 
		self.items[37] = 'i3v' 
		self.items[38] = 'last_command_id' 
		self.items[39] = 'i_mtr_ab[0]' 
		self.items[40] = 'i_mtr_ab[1]' 
		self.items[41] = 'i_mtr_ab[2]' 
		self.items[42] = 'i_mtr_ab[3]' 
		self.items[43] = 'i_mtr[0]' 
		self.items[44] = 'i_mtr[1]' 
		self.items[45] = 'epot[0]' 
		self.items[46] = 'epot[1]' 
		self.items[47] = 'epot[2]' 
		self.items[48] = 'epot[3]' 
		self.items[49] = 'micros' 
		self.items[50] = 'telem_rate' 
		self.items[51] = 'adc_rate' 
		self.items[52] = 'own_board_addr' 

		self.units[self.items[0]] = "ul"
		self.units[self.items[1]] = "ul"
		self.units[self.items[2]] = "ul"
		self.units[self.items[3]] = "ul"
		self.units[self.items[4]] = "ul"
		self.units[self.items[5]] = "ul"
		self.units[self.items[6]] = "ul"
		self.units[self.items[7]] = "psi"
		self.units[self.items[8]] = "psi"
		self.units[self.items[9]] = "psi"
		self.units[self.items[10]] = "psi"
		self.units[self.items[11]] = "psi"
		self.units[self.items[12]] = "psi"
		self.units[self.items[13]] = "Volts"
		self.units[self.items[14]] = "Amps"
		self.units[self.items[15]] = "ul"
		self.units[self.items[16]] = "Amps"
		self.units[self.items[17]] = "Amps"
		self.units[self.items[18]] = "Amps"
		self.units[self.items[19]] = "Amps"
		self.units[self.items[20]] = "Amps"
		self.units[self.items[21]] = "Amps"
		self.units[self.items[22]] = "Amps"
		self.units[self.items[23]] = "Amps"
		self.units[self.items[24]] = "Amps"
		self.units[self.items[25]] = "Volts"
		self.units[self.items[26]] = "Volts"
		self.units[self.items[27]] = "Volts"
		self.units[self.items[28]] = "Volts"
		self.units[self.items[29]] = "Volts"
		self.units[self.items[30]] = "Volts"
		self.units[self.items[31]] = "Volts"
		self.units[self.items[32]] = "Volts"
		self.units[self.items[33]] = "Volts"
		self.units[self.items[34]] = "Volts"
		self.units[self.items[35]] = "Volts"
		self.units[self.items[36]] = "Amps"
		self.units[self.items[37]] = "Amps"
		self.units[self.items[38]] = "ul"
		self.units[self.items[39]] = "Amps"
		self.units[self.items[40]] = "Amps"
		self.units[self.items[41]] = "Amps"
		self.units[self.items[42]] = "Amps"
		self.units[self.items[43]] = "Amps"
		self.units[self.items[44]] = "Amps"
		self.units[self.items[45]] = "Volts"
		self.units[self.items[46]] = "Volts"
		self.units[self.items[47]] = "Volts"
		self.units[self.items[48]] = "Volts"
		self.units[self.items[49]] = "us"
		self.units[self.items[50]] = "ms"
		self.units[self.items[51]] = "ms"
		self.units[self.items[52]] = "ul"

	def parse_packet(self, packet):
		self.dict[self.items[0]] = int((float(struct.unpack("<B", packet[0:1])[0]))/1)
		self.dict[self.items[1]] = int((float(struct.unpack("<B", packet[1:2])[0]))/1)
		self.dict[self.items[2]] = int((float(struct.unpack("<B", packet[2:3])[0]))/1)
		self.dict[self.items[3]] = int((float(struct.unpack("<B", packet[3:4])[0]))/1)
		self.dict[self.items[4]] = int((float(struct.unpack("<H", packet[4:6])[0]))/1)
		self.dict[self.items[5]] = int((float(struct.unpack("<I", packet[6:10])[0]))/1)
		self.dict[self.items[6]] = int((float(struct.unpack("<I", packet[10:14])[0]))/1)
		self.dict[self.items[7]] = float((float(struct.unpack("<h", packet[14:16])[0]))/1)
		self.dict[self.items[8]] = float((float(struct.unpack("<h", packet[16:18])[0]))/1)
		self.dict[self.items[9]] = float((float(struct.unpack("<h", packet[18:20])[0]))/1)
		self.dict[self.items[10]] = float((float(struct.unpack("<h", packet[20:22])[0]))/1)
		self.dict[self.items[11]] = float((float(struct.unpack("<h", packet[22:24])[0]))/1)
		self.dict[self.items[12]] = float((float(struct.unpack("<h", packet[24:26])[0]))/1)
		self.dict[self.items[13]] = float((float(struct.unpack("<h", packet[26:28])[0]))/1000)
		self.dict[self.items[14]] = int((float(struct.unpack("<h", packet[28:30])[0]))/100)
		self.dict[self.items[15]] = int((float(struct.unpack("<B", packet[30:31])[0]))/1)
		self.dict[self.items[16]] = float((float(struct.unpack("<B", packet[31:32])[0]))/10)
		self.dict[self.items[17]] = float((float(struct.unpack("<B", packet[32:33])[0]))/10)
		self.dict[self.items[18]] = float((float(struct.unpack("<B", packet[33:34])[0]))/10)
		self.dict[self.items[19]] = float((float(struct.unpack("<B", packet[34:35])[0]))/10)
		self.dict[self.items[20]] = float((float(struct.unpack("<B", packet[35:36])[0]))/10)
		self.dict[self.items[21]] = float((float(struct.unpack("<B", packet[36:37])[0]))/10)
		self.dict[self.items[22]] = float((float(struct.unpack("<B", packet[37:38])[0]))/10)
		self.dict[self.items[23]] = float((float(struct.unpack("<B", packet[38:39])[0]))/10)
		self.dict[self.items[24]] = float((float(struct.unpack("<B", packet[39:40])[0]))/10)
		self.dict[self.items[25]] = float((float(struct.unpack("<B", packet[40:41])[0]))/10)
		self.dict[self.items[26]] = float((float(struct.unpack("<B", packet[41:42])[0]))/10)
		self.dict[self.items[27]] = float((float(struct.unpack("<B", packet[42:43])[0]))/10)
		self.dict[self.items[28]] = float((float(struct.unpack("<B", packet[43:44])[0]))/10)
		self.dict[self.items[29]] = float((float(struct.unpack("<B", packet[44:45])[0]))/10)
		self.dict[self.items[30]] = float((float(struct.unpack("<B", packet[45:46])[0]))/10)
		self.dict[self.items[31]] = float((float(struct.unpack("<B", packet[46:47])[0]))/10)
		self.dict[self.items[32]] = float((float(struct.unpack("<B", packet[47:48])[0]))/10)
		self.dict[self.items[33]] = float((float(struct.unpack("<B", packet[48:49])[0]))/10)
		self.dict[self.items[34]] = float((float(struct.unpack("<i", packet[49:53])[0]))/100)
		self.dict[self.items[35]] = float((float(struct.unpack("<i", packet[53:57])[0]))/100)
		self.dict[self.items[36]] = float((float(struct.unpack("<B", packet[57:58])[0]))/100)
		self.dict[self.items[37]] = float((float(struct.unpack("<B", packet[58:59])[0]))/100)
		self.dict[self.items[38]] = float((float(struct.unpack("<H", packet[59:61])[0]))/100)
		self.dict[self.items[39]] = float((float(struct.unpack("<H", packet[61:63])[0]))/100)
		self.dict[self.items[40]] = float((float(struct.unpack("<H", packet[63:65])[0]))/100)
		self.dict[self.items[41]] = float((float(struct.unpack("<H", packet[65:67])[0]))/100)
		self.dict[self.items[42]] = float((float(struct.unpack("<H", packet[67:69])[0]))/100)
		self.dict[self.items[43]] = float((float(struct.unpack("<H", packet[69:71])[0]))/100)
		self.dict[self.items[44]] = float((float(struct.unpack("<H", packet[71:73])[0]))/100)
		self.dict[self.items[45]] = float((float(struct.unpack("<H", packet[73:75])[0]))/1000)
		self.dict[self.items[46]] = float((float(struct.unpack("<H", packet[75:77])[0]))/1000)
		self.dict[self.items[47]] = float((float(struct.unpack("<H", packet[77:79])[0]))/1000)
		self.dict[self.items[48]] = float((float(struct.unpack("<H", packet[79:81])[0]))/1000)
		self.dict[self.items[49]] = int((float(struct.unpack("<Q", packet[81:89])[0]))/1)
		self.dict[self.items[50]] = int((float(struct.unpack("<I", packet[89:93])[0]))/1)
		self.dict[self.items[51]] = int((float(struct.unpack("<I", packet[93:97])[0]))/1)
		self.dict[self.items[52]] = int((float(struct.unpack("<B", packet[97:98])[0]))/1)
		self.log_string = str(time.clock()) + ',' + str(self.dict[self.items[6]]) + ',' + str(self.dict[self.items[7]]) + ',' + str(self.dict[self.items[8]]) + ',' + str(self.dict[self.items[9]]) + ',' + str(self.dict[self.items[10]]) + ',' + str(self.dict[self.items[11]]) + ',' + str(self.dict[self.items[12]]) + ',' + str(self.dict[self.items[13]]) + ',' + str(self.dict[self.items[14]]) + ',' + str(self.dict[self.items[15]]) + ',' + str(self.dict[self.items[16]]) + ',' + str(self.dict[self.items[17]]) + ',' + str(self.dict[self.items[18]]) + ',' + str(self.dict[self.items[19]]) + ',' + str(self.dict[self.items[20]]) + ',' + str(self.dict[self.items[21]]) + ',' + str(self.dict[self.items[22]]) + ',' + str(self.dict[self.items[23]]) + ',' + str(self.dict[self.items[24]]) + ',' + str(self.dict[self.items[25]]) + ',' + str(self.dict[self.items[26]]) + ',' + str(self.dict[self.items[27]]) + ',' + str(self.dict[self.items[28]]) + ',' + str(self.dict[self.items[29]]) + ',' + str(self.dict[self.items[30]]) + ',' + str(self.dict[self.items[31]]) + ',' + str(self.dict[self.items[32]]) + ',' + str(self.dict[self.items[33]]) + ',' + str(self.dict[self.items[34]]) + ',' + str(self.dict[self.items[35]]) + ',' + str(self.dict[self.items[36]]) + ',' + str(self.dict[self.items[37]]) + ',' + str(self.dict[self.items[38]]) + ',' + str(self.dict[self.items[39]]) + ',' + str(self.dict[self.items[40]]) + ',' + str(self.dict[self.items[41]]) + ',' + str(self.dict[self.items[42]]) + ',' + str(self.dict[self.items[43]]) + ',' + str(self.dict[self.items[44]]) + ',' + str(self.dict[self.items[45]]) + ',' + str(self.dict[self.items[46]]) + ',' + str(self.dict[self.items[47]]) + ',' + str(self.dict[self.items[48]]) + ',' + str(self.dict[self.items[49]]) + ',' + str(self.dict[self.items[50]]) + ',' + str(self.dict[self.items[51]]) + ',' + str(self.dict[self.items[52]]) + ','